{"./":{"url":"./","title":"《图解TCP/IP》第 5 版笔记","keywords":"","body":"《图解TCP/IP》笔记 本书旨在让广大读者理解 TCP/IP 的基本知识，掌握 TCP/IP 的基本技能 在线笔记 目录 第 1 章 网络基础知识 第 2 章 TCP/IP 基础知识 第 3 章 数据链路 powered by Gitbook更新时间： 2020-09-09 13:14:43 "},"md-note/01-web_base.html":{"url":"md-note/01-web_base.html","title":"第 1 章 网络基础知识","keywords":"","body":"第 1 章 网络基础知识 计算机与网络发展历史及标准化过程、OSI参考模型、网络概念本质、网络构件的设备 计算机网络出现的背景 起初，计算机以单机模式被广泛使用，也叫独立模式，即未连接到网络、各自独立使用的方式 将一个个计算机连接在一起，即形成计算机网络，根据规模分为 WAN（Wide Area Network，广域网） 和 LAN（Local Area Network，局域网） 最初是由管理员将特定的几台计算机连到一起形成计算机网络，是私有的网络，后来人们不断尝试将私有网络相互连接形成更大的私有网络，之后又逐渐演变成为互联网，互联网中的任何两台计算机都能通信，再后来各种各样的终端都接入互联网，形成现在的综合通信环境。 计算机网络就好比人的神经系统，神经能将各处的感觉传递到大脑，网络能将世界各地的信息传递到你的计算机中。 计算机与网络发展的 7 个阶段 了解计算机与网络发展的历史与现状，能更好的理解 TCP/IP 的重要性 年代 内容 20 世纪 50 年代 批处理时代 20 世纪 60 年代 分时系统时代 20 世纪 70 年代 计算机间通信时代 20 世纪 80 年代 计算机网络时代 20 世纪 90 年代 互联网普及时代 2000 年 以互联网为中心的时代 2010 年 无论何时何地一切皆 TCP/IP 的网络时代 批处理（Batch Processing） 20 世纪 50 年代 事先将用户程序和数据装入卡带或磁带，并由计算机按照一定的顺序读取，使用户所要执行的这些程序和数据能够一并批量得到处理的方式 这种计算机价格昂贵体积巨大，通常放置于专门进行计算机管理于运维的计算机中心，用户除了事先将程序和数据装入卡带或磁带带到中心去运行之外别无他法 操作相当复杂，有专门的操作员负责实际运行程序，用户较多时只能过些时日再来取结果 彼时的计算机主要用于大规模计算或处理，不是普通人使用的工具 分时系统（Time Sharing System，TSS） 20 世纪 60 年代出现 多个终端（由键盘、显示器等输入输出设备组成）与同一个计算机连接，允许多个用户同时使用一台计算机的系统（原理与 CPU 的多任务调度同） 彼时计算机造价昂贵，无法一人一台，分时系统则可以假装“一人一台”，用户感觉“完全是自己在使用一台计算机”，这体现了分时系统的独占性 分时系统的重要特性：多路性、独占性、交互性、及时性 它的交互式（对话式）操作使计算机变得更加人性化，并且促进了像 BASIC 这样能够与计算机实现交互的编程语言的发展，而在此之前的 COBOL 和 FORTRAN 等计算机编程语言都必须以批处理系统为基础才能开发和运行 BASIC 语言的发明是为了让更多的人学习如何编程，可以说是关注分时系统的初学者们的必学语言 此时每个终端与计算机之间通信线路构成了星型结构，从这时开始，网络通信与计算机之间的关系开始显现。小型机随集产生，办公场所与工厂也逐渐引入计算机 分时系统中一个计算机与多个终端使用通信线路连接，但两个计算机之间还是无法连接 计算机之间的通信 20 世纪 70 年代，计算机性能飞速发展，体积小型化，价格急剧下降，企业也开始使用，为了提高工作效率，人们开始研究计算机之间的通信技术 计算机之间通信技术诞生前，计算机间转移数据需要使用磁带、软盘等外部存储介质 计算机网络的产生 20 实际 80 年代 能够连接各式各样的计算机的网络诞生 窗口系统的发明让人们更加便捷的使用计算机，拉近与网络的距离，开始愉快的网上冲浪，享受网上的丰富资源 互联网的普及 20 世纪 90 年代 连接异构型计算机的通信网络技术就是现在的互联网技术，此时万维网（World Wide Web，WWW）等信息传播方式也迎来了大发展，互联网进入每个家庭内部 瘦身 20 世纪 90 年代上半叶，由于使用个人电脑与 UNIX 工作站搭建网络比大型主机更有优势，操作简单且价格低廉，由此引发了一个旨在降低网络架构成本的新趋势，被称为“瘦身” 以互联网技术为中心的时代 许多发展道路各不相同的网络技术都向互联网靠拢。 例如，电话网曾经一直作为通信基础设施、支撑通信网络，其地位目前已被 IP（Internet Protocol）网所取代，而 IP 网本身就是互联网技术的产物。通过 IP 网，不仅可以实现电话通信、电视播放，还能实现计算机间的通信，建立互联网。而且能联网的设备也是扩展到了各种电子产品。 从“单纯简历连接”到“安全简历连接” 互联网给了我们高度便捷的信息网络环境，正成为社会基础设施建设中最基本的要素之一，但其也带来了负面问题，如计算机病毒、信息泄露、网络欺诈等等。 故而现在人们更加追求安全建立连接 手握金刚钻的 TCP/IP 能够使许多独立发展的网络通信技术融合并实现统一的正是 TCP/IP 技术，它是通信协议的统称 协议 TCP/IP 是一种网络体系结构，是 IP、TCP、UDP、HTTP、SMTP 等一系列协议的集合，主要用于互联网、局域网。此外也有很多其他类型的网络体系结构以及协议 协议就是计算机之间通信时实现达成的一种约定，可以使得不同设备、CPU（Central Processing Unit）、操作系统（Operating System，OS）都可以实现通信 例如平常聊天中，使用的语言就是协议，聊天就是通信，而说话的内容就是要传递的数据，只有两人协议相同时才能完成聊天 分组交换协议 将大数据分割成一个个称为包（Packet）的较小单元进行传输的方法 在每一个分组中附加源主机地址和目标主机地址送给通信线路，这些发送端地址、接收端地址以及分组序号写入的部分称为报文首部，这都已经规定在通信协议中 协议由谁指定 最初各大厂商都有自己的通信协议和网络体系结构，互不兼容，即使物理层面上连接了也无法实现通信，后面才逐渐意识到兼容性的重要意义 ISO（International Organization for Standardization，国际标准化组织）制定了国际标准 OSI（Open Systems Interconnection，开放式通信系统互联参考模型）对通信系统进行标准化，虽然 OSI 所定义的协议没有得到普及，但其设计之初作为指导方针的 OSI 参考模型却常被用于网络协议的制定当中 本书讲述的 TCP/IP 不是由 ISO 制定的某种国际标准，而是由 IETF（Internet Engineering Task Force）所建议、推进的一种协议，它作为互联网上的一种标准，也作为业界标准（非国家或公共机构指定的，但业界公认） 协议得以标准化使得各种设备可以相互通信，推动了计算机网络的普及 标准化 不同厂商的异构产品之间具有兼容性、便于使用的规范化过程 标准化组织分类： 国际标准化组织：ISO、ITU-T 等 国家级标准化机构：日本的 JISC 等 民间团体：如促进互联网协议标准化的 IETF 协议分层与 OSI 参考模型 OSI 参考模型将通信协议中必要的功能分成 7 层，上下层之间交互时遵循的约定称为接口，同一层之间的交互遵循的约定称为协议 OSI 的分层可以将每个层独立使用，避免异常扩大影响，可以构造一个扩展性和灵活性都很强的系统；分层后易于单独实现每个分层的协议，界定具体责任和义务；但是其也有过分模块化、处理变得更加沉重、每个模块不得不实现相似的处理逻辑等问题 理解分层的例子：打电话 序号 分层名称 功能 7 应用层 针对特定应用的协议，如文件传输、电子邮件、远程登录等 6 表示层 设备固有数据格式和网络标准数据格式的转换，应用信息转换网络格式或网络数据转换为应用要用的格式，保证同一比特表示不同意思的不同设备之间的正常通信，就是这一层的主要作用 5 会话层 通信管理，负责建立和断开通信连接，以及数据的分割等数据传输相关的管理 4 传输层 管理两个节点之间的数据传输，负责可靠传输，旨在通信双方节点上进行处理，无序在路由器上处理 3 网络层 地址管理与路由选择，将数据传输到目标地址 2 数据链路层 互联设备之间传送和识别数据帧，物理层面上的通信传输 1 物理层 以 0、1 代表电压高低。界定连接器和网线的规格 OSI 参考模型通信处理举例 每个分层上，在处理由上一层传来的数据时都可以附上当前层的协议所必须的首部信息。接收端对收到的数据进行首部和内容的分离，再转发给上一层 会话层决定建立连接和断开的时机，而传输层负责进行实际的建立和断开处理 TCP/IP 中，网络层与传输层相互协作以确保数据报能够传送到，实现可靠传输 相互直连的设备之间使用 MAC（Media Access Control，介质访问控制）地址（物理地址、硬件地址）实现传输，可以识别连接到同一传输介质上的设备 传输方式的分类 面向有连接型和面向无连接型 面向有连接型中，必须在通信传输前后，专门进行建立和断开连接的处理。如果无法通信就可以避免发送无谓的数据 面向有连接型情况下，发送端数据不一定要分组发送，TCP 是面向有连接型分组发送数据的，而电路交换属于面向有连接型且不仅限于分组发送数据的 面向无连接型无需建立和断开连接，发送端可于任何时候自由发送数据 面向无连接型采用分组交换情况多些，此时可以直接将数据理解为分组数据 电路交换和分组交换 网络通信方式大致分为两种：电路交换、分组交换。电路交换主要用于过去的电话网，分组交换则是 TCP/IP 采用的通信方式 电路交换中，交换机主要负责数据的中转处理。计算机先连接到交换机，交换机之间由众多通信线路连接。计算机间发送数据时，需要通过交换机与目标主机建立通信电路，建立好连接电路后，用户就可以一直使用这条电路，直到连接被断开为止 电路交换的问题：如果多个计算机连接到了一条电路，那么别的计算机只有等当前独占电路的计算机处理结束后才能使用电路，但谁知道他什么时候开始什么时候结束呢。而且当并发用户数超过交换机之间通信线路数时，那么通信根本无法实现 分组交换，计算机将要发送的数据分成多个数据包，按照一定顺序排列后分别发送。所有的计算机可以一起收发数据，提高了通信线路的利用率 路由器收到分组数据时先放到缓冲区中，再以先进先出的规则逐一发送（有时也会优先发送目标地址特殊的数据），因此分组交换也叫蓄积交换 分组交换中路由器之间通常只有一条线路，作为共享线路使用。电路交换中计算机之间的数据传输速度是不变的，分组交换中的传输速度与网络拥堵情况有关，且当路由器缓存饱和或溢出时，甚至可能会发生分组数据丢失、无法发送到对端的情况。 根据接收端数量分类 单播（Unicast） 1 对 1 通信，如早先的固定电话 广播（Broadcast） 将消息从 1 台主机发送给与之相连的所有其他主机，例如电视播放 广播域：只有在某个范围内的计算机才能收到相应的广播消息，类似于电视信号的频段 多播（Multicast） 类似于广播也是传给多个主机，但是是限定某一组主机，例如电视会议 任播（Anycast） 在特定的多台主机中选出一台作为接收端，例如DNS 根域名解析服务器 地址 每一层协议所使用的地址都不尽相同 唯一性 一个地址必须明确地表示一个主体对象，同一个通信网络中不允许有两个相同地址的通信主题存在 不过这个主体对象不是说单个对象，比如特定的某组主机共同有个地址，也是行的，比如说多播那种，再比如互联网研发部的所有同学 层次性 MAC 地址不具有层次性，IP 地址除了具有唯一性还具有层次性 MAC 地址中的制造商识别号、产品编号等也具有一定的层次性，但那是制造商管理上的，不是殉职过程中的层次性，所以在网络领域的地址来看它不具有层次性 IP 地址的分层通过网络号、主机号实现 网络传输中，节点根据一个表来确定报文改由哪个网卡发出。MAC 寻址参考地址转发表，IP 寻址参考路由控制表。计算机、路由器使用 IP 寻址发送数据，交换机使用 MAC 寻址发送数据 网络的构成要素 通信媒介与数据链路 计算机之间通过电缆相互连接，电缆分为双绞线电缆、光纤电缆、同轴电缆、串行电缆等 媒介有电波、微波等 传输速率：两个设备之间数据流动的物理速度，单位 bps（Bits Per Second，每秒比特数），又称为带宽（Bandwidth） 吞吐量：主机之间实际的传输速率，单位与带宽相同，不仅衡量带宽，也同时衡量主机的 CPU 处理能力、网络拥堵程度、报文中数据占比等信息 网卡 Network Interface Card，NIC 计算机连接网络所必须的部件 中继器 Repeater OSI 第 1 层——物理层上延长网络的设备，把信号进行调整和放大后继续传输下去 有些中继器还能实现不同类型信号的转换，如连接同轴电缆和光缆的中继器 中继器两侧连接的必须是相同传输速度的媒介 中继器不能无限使用 多个端口的中继器也被称为中继集线器或集线器 网桥/2 层交换机 在 OSI 模型第 2 层——数据链路层层面上连接两个网络的设备，能识别数据链路层中的数据帧，并存储之，再重新生成信号作为一个全新的帧发送给相连的另一个网段 网桥根据数据帧的内容转发数据给相邻的其他网络，有完整性校验 网桥没有连接网段个数的限制 网桥基本上只用于连接相同类型的网络，有时也可以连接不同传输速率的网络 网桥还能通过地址自学机制和过滤功能控制网络流量 具有网桥功能的 Hub 叫做交换集线器，常被直接称为 Hub，只有中继功能的 Hub 叫集线器 路由器/3 层交换机 OSI 模型的第 3 层——网络层上面连接两个网络、并对分组报文进行转发的设备 网桥根据 MAC 地址进行处理，而路由器根据 IP 地址进行处理，因此网络层中的地址是 IP 地址 可以连接不同的数据链路 可以分带网络负荷，甚至能带有一定的网络安全功能 4~7 层交换机 处理 OSI 模型中从传输层至应用层的数据 例如大型网站的负载均衡器 带宽控制功能：网络拥堵时优先处理语音、放缓处理邮件 网关 协议的转换和数据的转发 同一种协议之间转发数据的叫做应用网关 OSI 参考模型中负责将从传输层到应用层的数据进行转换和转发的设备 代理服务器（Proxy Server）就是网关的一种，称为应用网关 现代网络实态 构成 高速路由器组成核心网（骨干网），多功能路由器和 3 层交换机组成边缘网络，再往下是接入层（汇聚层） 通信 手机开机就会自动与距离最近的基站发生无线通信，基站就相当于网络的接入层 powered by Gitbook更新时间： 2020-09-09 02:54:55 "},"md-note/02-TCP:IP_base.html":{"url":"md-note/02-TCP:IP_base.html","title":"第 2 章 TCP/IP 基础知识","keywords":"","body":"第 2 章 TCP/IP 基础知识 Transmission Control Protocol、Internet Protocol TCP/IP 出现的背景及其历史 20 世纪 60 年代，以美国国防部（The Department of Defense，DoD）为中心的组织开始着力于研究心得通信技术。希望在通信传输中，即使遭到了敌方的攻击破坏，也可以经过迂回线路实现最终通信，分组交换技术应运而生 ARPANET（Advanced Research Projects Agency Network，阿帕网）是他们实验的网络，并取得超前的成功，证明了分组交换技术的通信方法是可行的，它是互联网的鼻祖 ARPANET 中的一个研究机构于 20 世纪 70 年代前半叶研发出了 TCP/IP，到 1982 年具体规范被确定，1983 年成为 ARPANET 网络中唯一指定的协议。1980 年在使用 ARPANET 的大学、机构中出现 BSD UNIX，它实现了 TCP/IP 协议，随着 UNIX 工作站的普及，TCP/IP 也迎来盛行之时。 TCP/IP 的标准化 TCP/IP 是一系列协议的统称，如 IP 与 ICMP、TCP 与 UDP、TELNET 与 FTP、HTTP 等。也称为网际协议族（Internet Protocol Suite） TCP/IP 标准化过程中特点： 具有开放性：由允许任何人加入的 IETF 讨论制定 注重实用性：实现真正能够通信的技术的重要性大于制定某一协议的规范本身。大致规范定下后就开始实现协议进行通信，发现问题讨论修改 RFC（Request For Comment），记录了 IETF 需要讨论、已经讨论的各种协议的文档 IP 协议由 RFC279 制定 TCP 协议由 RFC793 制定 扩展、修改已有协议都要新建 RFC，比较麻烦，因此采用 STD（Standard）方式管理编号。STD 用来记载哪个编号制定哪个协议，即使协议规范内容改变也不会改变 STD 编号，只是其中记录的 RFC 编号视情况增减即可 IETF 每年组织 3 次会议，平时都是通过邮件组形式进行讨论，且邮件组不限制订阅 TCP/IP 标准化流程 互联网草案阶段，有效期 6 个月，否则自动消除 经 IESG（IETF Engineering Steering Group，由 IETF 主要成员构成）批准编入 RFC 文档进入提议标准（Proposed Standard，也是此文档的名称）阶段 协议从上一阶段开始被众多设备应用，如能得到 IESG 认可，即能成为草案标准（Draft Standard），如遇到问题则在此之前修订 更多地设备实现和应用此协议，且所有参与该协议指定的人都觉得它“实用性强，没有什么问题”，并得到 IESG 最终批准，即可以成为标准 互联网基础知识 指由 ARPANET 发展而来、互连全世界的计算机网络，其英文单词 The Internet 也成为固有名词，而 Internet 现在一般指网际网 与 TCP/IP 的关系：TCP/IP 本就是为使用互联网而开发指定的协议族，互联网的协议就是 TCP/IP，TCP/IP 就是互联网的协议 连接全世界的互联网是由很多区域网络组成的，区域网络又由更小的区域网络或机构内部网络构成。每个网络都由骨干网（BackBone）和末端网（Stub）组成。每个网络之间通过 NOC（Network Operation Center，网络操作中心）相连。如果网络运行商不同，网络连接方式、使用方法也会不同，连接异构网络需要 IX（Internet Exchange，网络交换中心）的支持。互联网就是众多异构网络通过 IX 互连的一个巨型网络 TCP/IP 协议分层模型 与 OSI 参考模型对比 硬件（物理层） 负责数据传输的硬件，如以太网或电话线路等，把各种设备连起来 网络接口层（数据链路层） 此层也可以与硬件层合成网络通信层 此层利用硬件来进行通信，可以类比为驱动程序，有了硬件要有软件才能工作 互联网层（网络层） 此层使用 IP 协议，相当于 OSI 参考模型中的第 3 层网络层，IP 协议基于 IP 地址转发分包数据，IP 协议的作用是将分组数据包发送到目的主机 连接互联网的所有主机、路由器都必须实现 IP 的功能，其他网络设备如网桥、中继器或集线器则不必须实现 IP 跨越网络传送数据包，使整个互联网都能收到数据的协议，此期间使用 IP 地址作为主机标识，不具有重发机制，属于非可靠性传输协议 ICMP IP 数据包发送途中出现异常无法到达目的地时，要给发送端一个异常通知，有时被用于诊断网络健康状况 ARP 从分组数据包的 IP 地址中解析出 MAC 地址的协议 传输层 让应用程序之间实现通信，区分计算机中的不同程序使用的是端口号 TCP 面向有连接的传输层协议，保证双端通信主机之间通信可达，能正确处理丢包、乱序等情况 TCP 能有效利用带宽，缓解网络拥堵 为了建立和断开连接，有时需要至少 7 次的收发包，导致流量的浪费，而且为了提高网络利用率，其中定义了各种复杂规范，因此不利于视频会议（视频、音频的数据量既定）等场合 UDP 面向无连接的传输层协议，常用于分组数据较少或多播、广播通信及视频通信等多媒体领域 应用层（会话层以上的分层） TCP/IP 多应用于客户端/服务器架构中，客户端发送请求给服务器，并接收来自服务器的响应 WWW 浏览器通过 HTTP（HyperText Transfer Protocol）与服务端通信，主要传输 HTML（HyperText Markup Language）数据，WWW 中的 HTTP 属于 OSI 应用层的协议，而 HTML 属于表示层的协议 E-Mail 使用 SMTP（Simple Mail Transfer Protocol）协议，最初只能发送文本格式，后由 MIME 协议扩展后就可以发送声音、图像、带格式文字等信息，这里的 MIME 即属于 OSI 参考模型的第 6 层——表示层的协议 文件传输（FTP） File Transfer Protocol，用于文件传输，传输过程中可以选择用二进制方式或文本方式。而文本方式在不同操作系统之间进行时，会自动修改换行符，这也属于表示层的功能 在 FTP 传输过程中会建立两个 TCP 连接，分别为控制连接和数据连接，这两种连接的控制管理属于会话层的功能 远程登录（TELNET、SSH） TELetypewriter NETwork、Secure SHell，登录到远程的计算机上来运行程序 网络管理（SNMP） Simple Network Management Protocol，在 TCP/IP 中进行网络管理，接受联网设备的信息通知、通知设置、故障通知，并进行远程修改配置、检查是否正常运行 使用 SNMP 管理的主机、网桥、路由器都称为 SNMP 代理（Agent），管理的那一端叫做管理器（Manager），SNMP 就是 Manager 与 Agent 之间用到的协议 管理端使用 MIB（Management Information Base）来访问代理端中保存的网络接口信息、通信数据量、异常数据量、设备温度等信息。在 TCP/IP 的网络管理中，SNMP 属于应用层协议，MIB 则属于表示层协议 TCP/IP 分层模型与通信示例 数据包首部 每个分层都会为数据附加首部，以包含该层必要的信息。首部就是为该层协议提供信息部分，数据就是该层要发送的内容，当然从下一层的角度看，上一层收到的包（由上一层的首部和上一层要发送的数据构成）整个被认为是本层的数据 发送数据包 甲给乙发送“早上好”的邮件： 应用程序处理：编码处理（相当于 OSI 的表示层功能） TCP 模块处理：根据应用指示负责建立连接、发送数据、断开连接，提供将应用层发来的数据顺利发送至对端的可靠传输，TCP 首部包含源和目标端口号、序号、校验和，然后将首部和数据一起发给 IP IP 模块处理：在 TCP 传来的整个数据前加上自己的首部，其中有发送端及接收端的 IP 地址，紧随 IP 首部的还有标识后面数据是 TCP 还是 UDP 的标识信息。IP 包生成后，参考路由控制表决定接受此 IP 包的路由或主机，随后发送给连接这些路由器或主机网络接口的驱动程序，以实现真正发送数据 若不知道接收端的 MAC 地址，可利用 ARP（Address Resolution Protocol）查找 网络接口（以太网驱动）的处理：以太网首部中包含发送端及接收端的 MAC 地址、以太网类型标识，数据通过物理层传输给接收端。发送处理中 FCS（Frame Check Sequence）由硬件计算，添加到包的最后，以判断数据包是否由于噪声而被破坏 经过数据链路的包 包（分组数据包）流动时从前向后一次被附加了以太网包首部、IP 包首部、TCP （或 UDP）包首部及应用自己的包首部，然后是数据，末尾追加了以太网包尾（Ethernet Trailer） 首部至少包含两个信息：发送端及接收端的地址、上一层的协议类型 数据包接收处理 发送流程的逆序过程 网络接口（以太网驱动）的处理：从以太网包首部中找到 MAC 地址判断是否为自己，不是则丢弃。若是自己则根据数据类型将数据传给对应子程序，如标识为 IP 包则给处理 IP 的子程序，如果是 ARP 则把数据交给 ARP 处理，如果无法识别的协议类型则丢弃 IP 模块的处理：类似上述，判断 IP 地址是否为自己，再根据其中的上层协议标识交给对应的上层程序。对于路由器来说接收端一般不是自己，则借助路由控制表找出该发送的主机或路由器后将数据发送出去 TCP 模块的处理：计算校验和以判断数据是否被破坏，然后检查是否在按照序号接收数据，然后检查端口号以确定应用程序。接收后返回一个确认信息给发送端，如果此信息没能被收到，发送端就一直反复发送。数据完整接收后会传给应用程序 应用程序处理：根据邮件地址确认是否为乙的地址，然后进行右键保存、显示等等处理，地址错误、保存失败等都会返回异常给发送端 powered by Gitbook更新时间： 2020-09-09 12:56:28 "},"md-note/03-data_link.html":{"url":"md-note/03-data_link.html","title":"第 3 章 数据链路","keywords":"","body":"第 3 章 数据链路 powered by Gitbook更新时间： 2020-09-09 13:00:31 "}}